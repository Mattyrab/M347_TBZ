#cloud-config
# source: https://gist.github.com/syntaqx/9dd3ff11fb3d48b032c84f3e31af9163
users:
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    home: /home/ubuntu
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCUBo+qnNu5xxM9vfz4C04M36FHxHNrEMdm5TkFj1/SfVtqunlUOeMpu7nFCZZKnX8HYwf/MkjcBiTYAgncxku8grwl6XuW/pcvmb6/ghSIaw4xtRRSzit7omqJ5d8kXB3+Nd1aaMHsjfly4nkaqswhySVXQqr8Hw6DbWVw8jLLVKEE+5NZHY33hJkhJwK4blCllsGpmQaKi1qxjsN0hZOWNK01iJAydwD8t2xJ0NOYbq8Qas5IyPnRN7SPxvEhIP6WLQ6Ym6Dmf8FwNW1cHLTKabgjzt5f/HKUkKS89dPd3fn4nnFli1BOMECGUIvVlOw2pQNri7+04OOfn2FGlqr5 teacher
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDJz3nnLJPcD1WnQ0YOLzjtWLT0dIH7PHM8UbeWmtLeCB6HJu5ziRPrRt680ucwtKM85jkIKkiU7OZfKhHJNtUASjas7sogEKWxQ4uVsCui4EVhZTVj7jywovlAwuaj+gbV7AN5ZZ1qxumVhomblCLM/oTNEmeAE665pcrZeUppEDjY9fVjukKGzA6OYB9tSM4H01vpCe/uywCsakS/PrAPL+L7Gs6LsuqMPkEEjuya5AJsV2XFMgnhSPAa93R9BIgoZ3RgBIgd8TnrXjIEez0/RMCVm1f8UZzM4OvIG4afyeFGA4ni2kJ9VaRCxir0fzSiR9dxu0EBlYHh1EIvCFd521hcN0K38GjjbiLGyrzgB4pzwWNU1wk+kY3yljbvgYC4kC7Fd5vB7VMxZgSW+sIuBKokGROzBEJBl96YzKj1LDO9tIihIyPo75KK+clB5kdMDU20Kkc9i05IkfzqwNQKng8HLgvd1WofrueIAfBe+cqRWJmcDwcyxPoY/3e+fn0Tr71p7x2xf1yhprkN7bMgl5aXQsSJWvybttgJesSuZB4wSPuPOUA6uHSaZltqXCcrNcR42Kg421dzeu4FSjORN3fNUdawgwlEdR6qflXUBua1tnUpJfoLanUkPjrfNy29J27cNrmBYVVnPhmcRL74gCWN/numtOK/5N6rMBb1Aw== matth@MR-Work-Laptop
ssh_pwauth: false
disable_root: false
package_update: true
package_upgrade: true
groups:
  - docker
system_info:
  default_user:
    groups: [docker]
packages:
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release
  - unattended-upgrades
write_files:
  - path: /home/ubuntu/info.php
    content: |
      <?php
        phpinfo();
      ?>
  - path: /var/www/html/index.html
    content: |
      <html>
        <head><title>Willkommen</title></head>
        <body><h1>Willkommen auf dem Webserver!</h1></body>
      </html>
  - path: /home/ubuntu/db.php
    content: |
        <?php
        $servername = getenv('DB_HOST');
        $username = getenv('DB_USER');
        $password = getenv('DB_PASSWORD');
        $dbname = getenv('DB_NAME');

        $conn = new mysqli($servername, $username, $password, $dbname);
        if ($conn->connect_error) {
            die("Connection failed: " . $conn->connect_error);
        }

        $sql = "select Host, User from mysql.user;";
        $result = $conn->query($sql);
        while ($row = $result->fetch_assoc()) {
            echo("<li>" . $row["Host"] . " / " . $row["User"] . "</li>");
        }
        ?>
  - path: /home/ubuntu/Dockerfile
    content: |
      FROM php:8.0-apache

      WORKDIR /var/www
      COPY ./db.php ./info.php ./html/

      RUN docker-php-ext-install mysqli

      EXPOSE 80/tcp
      EXPOSE 80/udp
  - path: /home/ubuntu/docker-compose.yaml
    content: |
      services:
        web-app:
          container_name: m347-kn04a-web
          build: .
          restart: unless-stopped
          cpus: 1.0
          tty: true
          stdin_open: true
          ports:
            - 80:80
          networks:
            - kn04-network
          depends_on:
            - db
          environment:
            - DB_HOST=m347-kn04a-db
            - DB_USER=root
            - DB_PASSWORD=my-secret-pw
            - DB_NAME=mariadb

        db:
          container_name: m347-kn04a-db
          image: mariadb:latest
          restart: unless-stopped
          cpus: 1.0
          tty: true
          stdin_open: true
          networks:
            - kn04-network
          environment:
            - MARIADB_DATABASE=mariadb
            - MARIADB_ROOT_PASSWORD=my-secret-pw

      networks:
        kn04-network:
          driver: bridge
          ipam:
              config:
                  -
                    subnet: 172.10.0.0/16
                    ip_range: 172.10.5.0/24
                    gateway: 172.10.5.254
runcmd:
  - mkdir -p /etc/apt/keyrings
  - sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update
  - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
  - systemctl enable docker
  - systemctl start docker
  - usermod -aG docker ubuntu
  - newgrp docker
  - chmod 777 /var/run/docker.sock
  - cd /home/ubuntu
  - sudo docker compose up -d
final_message: "The system is finally up, after $UPTIME seconds"
